#!/usr/bin/env python3

import json
import locale
import sys
import reports

from operator import itemgetter # sorting list of lists


def load_data(filename):
    """Loads the contents of filename as a JSON file."""
    with open(filename) as json_file:
        data = json.load(json_file)
    return data


def format_car(car):
    """Given a car dictionary, returns a nicely formatted name."""
    return "{} {} ({})".format(
        car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
    """Analyzes the data, looking for maximums.

    Returns a list of lines that summarize the information.
    """
    locale.setlocale(locale.LC_ALL, 'en_US.UTF8')
    max_revenue = {"revenue": 0}
    max_sales = {"sales": 0}  # new
    yearly_sales = {}  # new
    max_yearly_sales = {"sales": 0}  # new

    for item in data:  # item itself is a dict

        # Calculate the revenue generated by this model (price * total_sales)
        # We need to convert the price from "$1234.56" to 1234.56
        car_details = item['car']  # new store car details
        item_price = locale.atof(item["price"].strip("$"))
        item_revenue = item["total_sales"] * item_price
        if item_revenue > max_revenue["revenue"]:
            item["revenue"] = item_revenue
            max_revenue = item  # stores ref to car dictionary

        # TODO: also handle max sales

        if item["total_sales"] > max_sales["sales"]:
            max_sales["sales"] = item["total_sales"]
            max_sales["car_model"] = format_car(car_details)

        # TODO: also handle most popular car_year, All new
        year = car_details['car_year']
        sales = item["total_sales"]
        yearly_sales[year] = yearly_sales.get(year, 0) + sales

    # Get the year with biggest sales
    for k, v in yearly_sales.items():
        if v > max_yearly_sales['sales']:
            max_yearly_sales['sales'] = v
            max_yearly_sales['year'] = k

    summary = [
        "The {} generated the most revenue: ${}".format(
            format_car(max_revenue["car"]), max_revenue["revenue"]), "The {} had the most sales: {}".format(max_sales["car_model"], max_sales["sales"]), "The most popular year was {} with {} sales.".format(max_yearly_sales['year'], max_yearly_sales['sales'])
    ]

    return summary


def cars_dict_to_table(car_data):
    """Turns the data in car_data into a list of lists."""
    table_data = [["ID", "Car", "Price", "Total Sales"]]
    for item in car_data:
        table_data.append([item["id"], format_car(
            item["car"]), item["price"], item["total_sales"]])
    return table_data


def main(argv):
    """Process the JSON data and generate a full report out of it."""
    data = load_data("car_sales.json")
    summary = process_data(data)

    formatted_summary = "<br/>".join(summary)
    print(summary)

    # TODO: turn this into a PDF report
    table_data = []
    header_row = ['ID', 'Car', 'Price', 'Total Sales']
    for item in data:
        car_details = item['car']
        table_data.append([item['id'], format_car(
            car_details), item['price'], int(item['total_sales'])])

    table_data.sort(key=lambda x: x[3])
    table_data.insert(0,header_row)
    
    reports.generate("car.pdf", "Sales summary for last month",
                     formatted_summary, table_data)

    # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
    main(sys.argv)
